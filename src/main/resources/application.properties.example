# PostgreSQL Database Configuration
# Cambia estos valores según tu configuración local:
spring.datasource.url=jdbc:tu enlace de base de datos
spring.datasource.username=tu_usuario_postgres
spring.datasource.password=tu_password_postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Database Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# OpenRouter API Configuration for AI Features
# Obtén tu API key en: https://openrouter.ai
spring.ai.openai.api-key=sk-or-v1-TU_API_KEY_DE_OPENROUTER_AQUI
spring.ai.openai.base-url=https://openrouter.ai/api
spring.ai.openai.chat.options.model=openai/gpt-4o
spring.ai.openai.chat.options.temperature=0.2

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration for Development
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.EduData=DEBUG
logging.level.org.springframework.jdbc=DEBUG

# Server Configuration
server.port=8081

# INSTRUCCIONES PARA CONFIGURAR:
# 1. Copia este archivo como 'application.properties'
# 2. Reemplaza 'tu_usuario_postgres' con tu usuario de PostgreSQL
# 3. Reemplaza 'tu_password_postgres' con tu contraseña de PostgreSQL
# 4. Reemplaza 'TU_API_KEY_DE_OPENROUTER_AQUI' con tu API key de OpenRouter
# 5. Asegúrate de que PostgreSQL esté ejecutándose en localhost:5432
# 6. Crea la base de datos 'edudata_db' en PostgreSQL si no existe
