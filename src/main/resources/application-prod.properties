# Configuración para producción en AWS
server.port=5000

# Base de datos PostgreSQL en AWS RDS (actualizar con tus datos)
spring.datasource.url=jdbc:postgresql://tu-rds-endpoint.region.rds.amazonaws.com:5432/edudata_db
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:tu_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexiones optimizado para producción
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA / Hibernate para producción
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Logging para producción
logging.level.root=INFO
logging.level.EduData=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# JWT Configuration (usar variables de entorno en producción)
jwt.secret=${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D635166546A576E5A7234743777217A25432A462D4A614E645267556B58703273357638792F423F4528472B4B6250655368566D5971337436763979244226452948404D6351665468576D5A7134743777217A25432A462D4A614E645267556B58703273357638}
jwt.expiration=${JWT_EXPIRATION:3600000}

# OpenAI API (usar variable de entorno)
spring.ai.openai.api-key=${OPENAI_API_KEY:tu-api-key-aqui}
spring.ai.openai.base-url=https://openrouter.ai/api
spring.ai.openai.chat.options.model=openai/gpt-4o
spring.ai.openai.chat.options.temperature=0.2

# Configuración de CORS para producción
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,https://tu-dominio.com}

# Configuración de salud para AWS Load Balancer
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
