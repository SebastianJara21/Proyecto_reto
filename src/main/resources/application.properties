# PostgreSQL Local
spring.datasource.url=jdbc:postgresql://aws-edudatadb.cvmyumwou6z6.us-east-2.rds.amazonaws.com:5432/edudata_Db
spring.datasource.username=postgres
spring.datasource.password=37NoHPcYmFikRTlgZ3z6
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuracion de conexion
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# OpenRouter
spring.ai.openai.api-key=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
spring.ai.openai.base-url=https://openrouter.ai/api
spring.ai.openai.chat.options.model=openai/gpt-4o
spring.ai.openai.chat.options.temperature=0.2

# JPA / Hibernate - Crear tablas automaticamente
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging para depuracion
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.EduData=DEBUG
logging.level.org.springframework.jdbc=DEBUG

# Puerto local del backend
server.port=${PORT:8080}

# URL del servidor (cambia seg√∫n el entorno)
server.url=${SERVER_URL:https://edudata-backend.onrender.com}

# JWT Configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D635166546A576E5A7234743777217A25432A462D4A614E645267556B58703273357638792F423F4528472B4B6250655368566D5971337436763979244226452948404D6351665468576D5A7134743777217A25432A462D4A614E645267556B58703273357638
jwt.expiration=3600000